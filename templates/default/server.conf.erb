input {
  <% if node['logstash']['server']['inputs'].empty? -%>
  tcp {
    type => "tcp-input"
    port => "5959"    
  }
  <% else -%> 
    <%= LogstashConf.section_to_str(node['logstash']['server']['inputs']) %>
  <% end -%>
}

filter {
  json { source => "message" }
  <%= LogstashConf.section_to_str(node['logstash']['server']['filters'], node['logstash']['server']['version'], @patterns_dir) %>
}

output {
  <% if node['logstash']['server']['debug'] -%>
  stdout { debug => true }
  <% end -%>
  <% if @enable_embedded_es -%>
  elasticsearch { embedded => true }
  <% elsif not @es_server_ip.empty? -%>
  elasticsearch { host => "<%= @es_server_ip %>" cluster => "<%= @es_cluster -%>"<% unless node['logstash']['elasticsearch_template'].empty? -%> template => "<%= node['logstash']['elasticsearch_template'] -%>" template_overwrite => true<% end -%> }<% end -%>
  <% unless @graphite_server_ip.empty? -%>
  graphite { host => "<%= @graphite_server_ip %>" metrics => ["logstash.events", "1"] }
  <% end -%>
  <% # unless node['logstash']['server']['outputs'].empty? -%>
    <%= LogstashConf.section_to_str(node['logstash']['server']['outputs']) %>
  <% # end -%>
}

